{"remainingRequest":"/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/babel-loader/lib/index.js!/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Edilson/Vue/projeto-02-tarefas/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Edilson/Vue/projeto-02-tarefas/src/App.vue","mtime":1581260515886},{"path":"/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/projeto-02-tarefas/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskGrid from '@/components/TaskGrid.vue';\nimport NewTask from '@/components/NewTask.vue';\nimport TaskProgress from '@/components/TaskProgress.vue';\nimport busTask from '@/buses/busTask';\nexport default {\n  components: {\n    TaskGrid: TaskGrid,\n    NewTask: NewTask,\n    TaskProgress: TaskProgress\n  },\n  data: function data() {\n    return {\n      tasks: []\n    };\n  },\n  methods: {\n    addtask: function addtask(task) {\n      var sameName = function sameName(t) {\n        return t.name === task.name;\n      };\n\n      var reallNew = this.tasks.filter(sameName).length === 0;\n      !reallNew && alert('Tarefa já realizada'); //linha abaixo reallNew && (expresão a ser realizada) equivale a if(reallNew){}\n\n      reallNew && this.tasks.push({\n        name: task.name,\n        pending: task.pending || true\n      });\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    busTask.deleteTask(function (index) {\n      index >= 0 && _this.tasks.splice(index, 1);\n    });\n    busTask.changeStatusTask(function (index) {\n      var status = _this.tasks[index].pending;\n      _this.tasks[index].pending = !status;\n    });\n  },\n  computed: {\n    progress: function progress() {\n      var total = this.tasks.length;\n      var done = this.tasks.filter(function (t) {\n        return !t.pending;\n      }).length;\n      return Math.round(done / total * 100) || 0;\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,YAAA,MAAA,+BAAA;AACA,OAAA,OAAA,MAAA,iBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA,QAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,QAAA,GAAA,SAAA,QAAA,CAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,IAAA;AAAA,OAAA;;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,KAAA,CAAA;AACA,OAAA,QAAA,IAAA,KAAA,CAAA,qBAAA,CAAA,CAHA,CAIA;;AACA,MAAA,QAAA,IAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,QAAA,OAAA,EAAA,IAAA,CAAA,OAAA,IAAA;AAFA,OAAA,CAAA;AAIA;AAVA,GAPA;AAmBA,EAAA,OAnBA,qBAmBA;AAAA;;AACA,IAAA,OAAA,CAAA,UAAA,CAAA,UAAA,KAAA,EAAA;AACA,MAAA,KAAA,IAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,KAFA;AAGA,IAAA,OAAA,CAAA,gBAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAA,EAAA,OAAA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,KAAA,EAAA,OAAA,GAAA,CAAA,MAAA;AACA,KAHA;AAIA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,OAAA;AAAA,OAAA,EAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,KAAA,GAAA,GAAA,KAAA,CAAA;AACA;AALA;AA5BA,CAAA","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<div class=\"position-fixed\">\n\t\t\t<h1>Tarefas</h1>\n\t\t\t<TaskProgress :progress=\"progress\"/>\n\t\t\t<NewTask @taskAdded=\"addtask\"/>\n\t\t</div>\n\t\t<TaskGrid :tasks=\"tasks\"/>\n\t</div>\n</template>\n\n<script>\nimport TaskGrid from '@/components/TaskGrid.vue'\nimport NewTask from '@/components/NewTask.vue'\nimport TaskProgress from '@/components/TaskProgress.vue'\nimport busTask from '@/buses/busTask'\nexport default {\n\tcomponents : {TaskGrid, NewTask, TaskProgress},\n\tdata() {\n\t\treturn {\n\t\t\ttasks: []\n\t\t}\n\t},\n\tmethods: {\n\t\taddtask(task) {\n\t\t\tconst sameName = t => t.name === task.name;\n\t\t\tconst reallNew = this.tasks.filter(sameName).length === 0;\n\t\t\t!reallNew && alert('Tarefa já realizada');\n\t\t\t//linha abaixo reallNew && (expresão a ser realizada) equivale a if(reallNew){}\n\t\t\treallNew && this.tasks.push({\n\t\t\t\tname: task.name,\n\t\t\t\tpending: task.pending || true\n\t\t\t});\n\t\t}\n\t},\n\tcreated() {\n\t\tbusTask.deleteTask(index => {\n\t\t\tindex >= 0 && this.tasks.splice(index,1);\n\t\t});\n\t\tbusTask.changeStatusTask(index => {\n\t\t\tvar status = this.tasks[index].pending;\n\t\t\tthis.tasks[index].pending = !status;\n\t\t});\n\t},\n\tcomputed: {\n\t\tprogress() {\n\t\t\tconst total = this.tasks.length;\n\t\t\tconst done =  this.tasks.filter(t => !t.pending).length;\n\t\t\treturn Math.round( done / total * 100 ) || 0;\n\t\t}\n\t},\n}\n</script>\n\n<style>\n\tbody {\n\t\tfont-family: 'Lato', sans-serif;\n\t\tbackground: linear-gradient(to right, rgb(22, 34, 42), rgb(58, 96, 115));\n\t\tcolor: #FFF;\n\t}\n\n\t#app {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t#app h1 {\n\t\tmargin-bottom: 5px;\n\t\tfont-weight: 300;\n\t\tfont-size: 3rem;\n\t}\n\ts.position-fixed {\n\t\tposition:absolute;\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n</style>\n"],"sourceRoot":"src"}]}