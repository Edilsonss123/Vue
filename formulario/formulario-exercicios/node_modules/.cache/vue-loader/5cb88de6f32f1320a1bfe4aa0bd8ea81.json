{"remainingRequest":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Edilson/Vue/formulario/formulario-exercicios/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/src/App.vue","mtime":1581328581996},{"path":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Edilson/Vue/formulario/formulario-exercicios/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"app\" } }, [\n    _c(\"h1\", [_vm._v(\"Registrar Reclamação\")]),\n    _c(\"div\", { staticClass: \"conteudo\" }, [\n      _c(\n        \"form\",\n        { staticClass: \"painel\" },\n        [\n          _c(\"div\", { staticClass: \"cabecalho\" }, [_vm._v(\"Formulário\")]),\n          _c(\"Rotulo\", { attrs: { nome: \"E-mail\" } }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model.lazy.trim\",\n                  value: _vm.usuario.email,\n                  expression: \"usuario.email\",\n                  modifiers: { lazy: true, trim: true }\n                }\n              ],\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.usuario.email },\n              on: {\n                change: function($event) {\n                  _vm.$set(_vm.usuario, \"email\", $event.target.value.trim())\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Senha\" } }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.usuario.senha,\n                  expression: \"usuario.senha\"\n                }\n              ],\n              attrs: { type: \"password\" },\n              domProps: { value: _vm.usuario.senha },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.usuario, \"senha\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Idade\" } }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model.number\",\n                  value: _vm.usuario.idade,\n                  expression: \"usuario.idade\",\n                  modifiers: { number: true }\n                }\n              ],\n              attrs: { type: \"number\" },\n              domProps: { value: _vm.usuario.idade },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.usuario, \"idade\", _vm._n($event.target.value))\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Mensagem\" } }, [\n            _c(\"textarea\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.msg,\n                  expression: \"msg\",\n                  modifiers: { trim: true }\n                }\n              ],\n              attrs: { name: \"\", cols: \"30\", rows: \"5\" },\n              domProps: { value: _vm.msg },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.msg = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Características do Problema\" } }, [\n            _c(\"span\", { staticClass: \"mr-4\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.caracterisiticas,\n                    expression: \"caracterisiticas\"\n                  }\n                ],\n                attrs: { type: \"checkbox\", value: \"reproduzivel\" },\n                domProps: {\n                  checked: Array.isArray(_vm.caracterisiticas)\n                    ? _vm._i(_vm.caracterisiticas, \"reproduzivel\") > -1\n                    : _vm.caracterisiticas\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.caracterisiticas,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = \"reproduzivel\",\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.caracterisiticas = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.caracterisiticas = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.caracterisiticas = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" Reproduzível\\n\\t\\t\\t\\t\")\n            ]),\n            _c(\"span\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.caracterisiticas,\n                    expression: \"caracterisiticas\"\n                  }\n                ],\n                attrs: { type: \"checkbox\", value: \"intermitente\" },\n                domProps: {\n                  checked: Array.isArray(_vm.caracterisiticas)\n                    ? _vm._i(_vm.caracterisiticas, \"intermitente\") > -1\n                    : _vm.caracterisiticas\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.caracterisiticas,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = \"intermitente\",\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.caracterisiticas = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.caracterisiticas = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.caracterisiticas = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" Intermitente\\n\\t\\t\\t\\t\")\n            ])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Qual produto?\" } }, [\n            _c(\"span\", { staticClass: \"mr-4\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.produto,\n                    expression: \"produto\"\n                  }\n                ],\n                attrs: { type: \"radio\", value: \"web\" },\n                domProps: { checked: _vm._q(_vm.produto, \"web\") },\n                on: {\n                  change: function($event) {\n                    _vm.produto = \"web\"\n                  }\n                }\n              }),\n              _vm._v(\" Web\\n\\t\\t\\t\\t\")\n            ]),\n            _c(\"span\", { staticClass: \"mr-4\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.produto,\n                    expression: \"produto\"\n                  }\n                ],\n                attrs: { type: \"radio\", value: \"mobile\" },\n                domProps: { checked: _vm._q(_vm.produto, \"mobile\") },\n                on: {\n                  change: function($event) {\n                    _vm.produto = \"mobile\"\n                  }\n                }\n              }),\n              _vm._v(\" Mobile\\n\\t\\t\\t\\t\")\n            ]),\n            _c(\"span\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.produto,\n                    expression: \"produto\"\n                  }\n                ],\n                attrs: { type: \"radio\", value: \"outro\" },\n                domProps: { checked: _vm._q(_vm.produto, \"outro\") },\n                on: {\n                  change: function($event) {\n                    _vm.produto = \"outro\"\n                  }\n                }\n              }),\n              _vm._v(\" Outro\\n\\t\\t\\t\\t\")\n            ])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Prioridade\" } }, [\n            _c(\n              \"select\",\n              {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.prioridade,\n                    expression: \"prioridade\"\n                  }\n                ],\n                attrs: { name: \"\", id: \"\" },\n                on: {\n                  change: function($event) {\n                    var $$selectedVal = Array.prototype.filter\n                      .call($event.target.options, function(o) {\n                        return o.selected\n                      })\n                      .map(function(o) {\n                        var val = \"_value\" in o ? o._value : o.value\n                        return val\n                      })\n                    _vm.prioridade = $event.target.multiple\n                      ? $$selectedVal\n                      : $$selectedVal[0]\n                  }\n                }\n              },\n              _vm._l(_vm.prioridades, function(prioridade) {\n                return _c(\n                  \"option\",\n                  {\n                    key: prioridade.codigo,\n                    domProps: {\n                      value: prioridade.codigo,\n                      selected: prioridade.codigo === 2\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(prioridade.nome) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ]\n                )\n              })\n            )\n          ]),\n          _c(\n            \"Rotulo\",\n            { attrs: { nome: \"Primeira Reclamação?\" } },\n            [\n              _c(\"Escolha\", {\n                model: {\n                  value: _vm.primeiraReclamacao,\n                  callback: function($$v) {\n                    _vm.primeiraReclamacao = $$v\n                  },\n                  expression: \"primeiraReclamacao\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"hr\"),\n          _c(\"button\", [_vm._v(\"Enviar\")])\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"painel\" },\n        [\n          _c(\"div\", { staticClass: \"cabecalho\" }, [_vm._v(\"Resultado\")]),\n          _c(\"Rotulo\", { attrs: { nome: \"E-mail\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.usuario.email))])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Senha\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.usuario.senha))])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Idade\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.usuario.idade))])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Mensagem\" } }, [\n            _c(\"span\", { staticStyle: { \"white-space\": \"pre\" } }, [\n              _vm._v(_vm._s(_vm.msg))\n            ])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Marque as Opções\" } }, [\n            _c(\"span\", [\n              _c(\n                \"ul\",\n                _vm._l(_vm.caracterisiticas, function(caracteristica) {\n                  return _c(\"li\", { key: caracteristica }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(caracteristica) +\n                        \"\\n\\t\\t\\t\\t\\t\\t\"\n                    )\n                  ])\n                })\n              )\n            ])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Qual produto?\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.produto))])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Prioridade\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.prioridades[_vm.prioridade].nome))])\n          ]),\n          _c(\"Rotulo\", { attrs: { nome: \"Primeira Reclamação?\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.primeiraReclamacao))])\n          ])\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}